myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(vuln_population=sum(`Adjusted Approximate Vulnerable Population`))
View(myanmar_sum)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(propo_vuln_population=sum(`Adjusted Approximate Vulnerable Population`)/`Total Pop Both sexes`))
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(propo_vuln_population=sum(`Adjusted Approximate Vulnerable Population`)/`Total Pop Both sexes`)
head(arrange(vuln_population), n=10)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(prop_vuln_population=sum(`Adjusted Approximate Vulnerable Population`)/`Total Pop Both sexes`)
head(arrange(prop_vuln_population), n=10)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(prop_vuln_population=sum(`Adjusted Approximate Vulnerable Population`)/`Total Pop Both sexes`)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(prop_vuln_population=(sum(`Adjusted Approximate Vulnerable Population`)/`Total Pop Both sexes`))
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
mutate(prop_vuln_population=(sum(`Adjusted Approximate Vulnerable Population`)/`Total Pop Both sexes`))
View(myanmar_sum)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST)
View(myanmar_sum)
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sf)
library(readr)
myanmar_ts <- "data/myanmar_township_boundaries.shp"
townships<-st_read(myanmar_ts)
ggplot(townships)+
geom_sf()
#import Myanmar vulnerability data
library(readxl)
vuln <- read_excel("data/Myanmar_MIMU_Vulnerability.xls")
glimpse(vuln)
vuln<-subset(vuln, select=-c(`State/Region Pcode`, `State/Region Name`, `District Pcode`, `District Name`, `Township Name`, `Number of Village Tracts`, `Number of Wards`))
#gather
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
#map selected indicators
library(tigris)
ggplot(myanmar_map_set)+
geom_sf(aes(fill=Measure*100), color="white", size=.1)+
scale_fill_distiller(direction=1, name="Population %") +
labs(title="Uneven development across Myanmar", caption="Source: themimu.info/")+
facet_wrap(~map_labels)+
theme_void() +
theme(panel.grid.major = element_line(colour = 'transparent'))
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_vp=sum(myanmar_chart_2$`Adjusted Approximate Vulnerable Population`), total_pop=sum(`Total Pop Both sexes`))
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sf)
library(readr)
myanmar_chart <- filter(myanmar, Indicator  == "Adjusted Wellbeing Score" |
Indicator == "Adjusted Vulnerability Score") %>%
arrange(desc(`Adjusted Vulnerability Score`))
myanmar_chart_2 <- vuln %>%
left_join(townships, by=c(`Township Pcode`="TS_PCODE"))
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_vp=sum(myanmar_chart_2$`Adjusted Approximate Vulnerable Population`), total_pop=sum(`Total Pop Both sexes`))
View(myanmar_sum)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_vp=sum(myanmar_chart_2$`Adjusted Approximate Vulnerable Population`), total_pop=sum(`Total Pop Both sexes`))%>%
mutate(prop_vuln_pop=total_vp/total_pop)
View(myanmar_sum)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_vp=sum(myanmar_chart_2$`Approximate Vulnerable Population`), total_pop=sum(`Total Pop Both sexes`))
View(myanmar_sum)
unique(myanmar_chart_2$`Approximate Vulnerable Population`)
View(myanmar_chart_2)
myanmar_sum_pop <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`))
View(myanmar_sum_pop)
myanmar_sum_vpop <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_vp=sum(`Approximate Vulnerable Population`))
View(myanmar_sum_vpop)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`), total_vp=sum(`Approximate Vulnerable Population`))
View(myanmar_sum)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop)
View(myanmar_sum)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop)*100
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100)
View(myanmar_sum)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`), total_vp=sum(`Approximate Vulnerable Population`))
#Calculate percentage of population that is vulnerable
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop)
View(myanmar_sum)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100)
View(myanmar_sum)
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")
library(tigris)
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
theme_void()
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer(palette="Pastel1")
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer(palette="Pastel1")
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
head(arrange(perc_vuln_pop), n=9)
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()
ggplot(myanmar_sum, aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST))+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()+
theme(legend.position="none")
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`), total_vp=sum(`Approximate Vulnerable Population`))
#Calculate percentage of population that is vulnerable
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100)
View(myanmar_sum)
myanmar_sum_top <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
head(arrange(perc_vuln_pop), n=9)
View(myanmar_sum_top)
myanmar_sum_top <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
head(arrange(desc(perc_vuln_pop)), n=9)
View(myanmar_sum_top)
myanmar_sum_top <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
head(arrange(desc(perc_vuln_pop)))
View(myanmar_sum_top)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
order (perc_vuln_pop, decreasing = TRUE)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
order (myanmar_sum$perc_vuln_pop, decreasing = TRUE)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
order (perc_vuln_pop, decreasing = TRUE)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
arrange (perc_vuln_pop, decreasing = TRUE)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
arrange(perc_vuln_pop, decreasing = TRUE)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
arrange(desc(perc_vuln_pop))
View(myanmar_sum)
ggplot(data = subset (myanmar_sum, ST %in% ST [1 : 9]))+
aes(x=ST, y=perc_vuln_pop, fill=ST)+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()+
theme(legend.position="none")
ggplot(data = subset (myanmar_sum, ST %in% ST [1 : 9]))+
aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST)+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Percentage population vulnerable")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()+
theme(legend.position="none")
ggplot(data = subset (myanmar_sum, ST %in% ST [1 : 9]))+
aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST)+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Vulnerable population (%)")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: themimu.info/")+
scale_fill_brewer()+
theme(legend.position="none")
library(dt)
library(DT)
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`), total_vp=sum(`Approximate Vulnerable Population`)) %>%
datatable()
datatable()
datatable(myanmar_sum)
myanmar_chart_2 <- vuln %>%
left_join(townships, by=c(`Township Pcode`="TS_PCODE"))
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`), total_vp=sum(`Approximate Vulnerable Population`))
datatable(myanmar_sum)
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
arrange(desc(perc_vuln_pop))
datatable(myanmar_sum)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sf)
library(readr)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sf)
library(readr)
library(DT)
myanmar_ts <- "data/myanmar_township_boundaries.shp"
townships<-st_read(myanmar_ts)
ggplot(townships)+
geom_sf()
library(readxl)
vuln <- read_excel("data/Myanmar_MIMU_Vulnerability.xls")
glimpse(vuln)
vuln<-subset(vuln, select=-c(`State/Region Pcode`, `State/Region Name`, `District Pcode`, `District Name`, `Township Name`, `Number of Village Tracts`, `Number of Wards`))
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
library(tigris)
ggplot(myanmar_map_set)+
geom_sf(aes(fill=Measure*100), color="white", size=.1)+
scale_fill_distiller(direction=1, name="Population %") +
labs(title="Uneven development across Myanmar", caption="Source: themimu.info/")+
facet_wrap(~map_labels)+
theme_void() +
theme(panel.grid.major = element_line(colour = 'transparent'))
#install packages ggplot2 tidyverse sf readr readxl, tigris
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sf)
library(readr)
#import Myanmar townships shapefile
myanmar_ts <- "data/myanmar_township_boundaries.shp"
townships<-st_read(myanmar_ts)
ggplot(townships)+
geom_sf()
#import Myanmar vulnerability data
library(readxl)
vuln <- read_excel("data/Myanmar_MIMU_Vulnerability.xls")
glimpse(vuln)
vuln<-subset(vuln, select=-c(`State/Region Pcode`, `State/Region Name`, `District Pcode`, `District Name`, `Township Name`, `Number of Village Tracts`, `Number of Wards`))
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
head(myanmar_map_set)
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
head(myanmar_map_set)
library(tigris)
ggplot(myanmar_map_set)+
geom_sf(aes(fill=Measure*100), color="white", size=.1)+
scale_fill_distiller(direction=1, name="Population %") +
labs(title="Uneven development across Myanmar", caption="Source: themimu.info/")+
facet_wrap(~map_labels)+
theme_void() +
theme(panel.grid.major = element_line(colour = 'transparent'))
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
unique(map_label)
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
unique(myanmar_map_set$map_label)
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
unique(myanmar_map_set$map_labels)
myanmar_chart_2 <- vuln %>%
left_join(townships, by=c(`Township Pcode`="TS_PCODE"))
myanmar_sum <- myanmar_chart_2 %>%
group_by(ST) %>%
summarize(total_pop=sum(`Total Pop Both sexes`), total_vp=sum(`Approximate Vulnerable Population`))
datatable(myanmar_sum)
#Calculate percentage of population that is vulnerable
myanmar_sum <- mutate(myanmar_sum, perc_vuln_pop=total_vp/total_pop*100) %>%
arrange(desc(perc_vuln_pop))
datatable(myanmar_sum)
ggplot(data = subset (myanmar_sum, ST %in% ST [1 : 9]))+
aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST)+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Vulnerable population (%)")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: Vulnerability Assessement, 2014 Census, themimu.info/")+
scale_fill_brewer()+
theme(legend.position="none")
title: "Myanmar Vulnerability"
author: "Eva Constantaras"
date: "September 4, 2018"
output:
html_document
theme: journal
highlight: espresso
ggplot(data = subset (myanmar_sum, ST %in% ST [1 : 9]))+
aes(x=reorder(ST, perc_vuln_pop), y=perc_vuln_pop, fill=ST)+
geom_bar(stat="identity")+
coord_flip()+
xlab("States") + ylab("Vulnerable population (%)")+
labs(title="Ethnic states most vulnerable before current crisis",
subtitle = "Over half of citizens vulnerable in the poorest and most marginalized ethnic states",
caption="Source: Vulnerability Assessement, 2014 Census, themimu.info/")+
scale_fill_brewer()+
theme(legend.position="none")
library(ggsave)
getwd()
ggsave("~mmva/docs/myanmar_states.png")
Error in grDevices::png(..., res = dpi, units = "in") :
unable to start png() device
ggsave("~mmva/docs/myanmar_states.jpeg")
ggsave("~mmva/docs/myanmar_states.pdf")
ggsave("myanmar_states.png")
ggsave("myanmar_townships.png")
ggsave("myanmar_townships.png")
myanmar_ts <- "data/myanmar_township_boundaries.shp"
#install packages ggplot2 tidyverse sf readr readxl, tigris
library(ggplot2)
library(tidyverse)
library(dplyr)
library(sf)
library(readr)
#import Myanmar townships shapefile
myanmar_ts <- "data/myanmar_township_boundaries.shp"
townships<-st_read(myanmar_ts)
ggplot(townships)+
geom_sf()
#import Myanmar vulnerability data
library(readxl)
vuln <- read_excel("data/Myanmar_MIMU_Vulnerability.xls")
glimpse(vuln)
vuln<-subset(vuln, select=-c(`State/Region Pcode`, `State/Region Name`, `District Pcode`, `District Name`, `Township Name`, `Number of Village Tracts`, `Number of Wards`))
#gather to create a column of Indicators
vuln_gather <- gather(data=vuln, key="Indicator", value = "Measure", -`Township Pcode`, na.rm=F)
#join datasets
myanmar <- left_join(vuln_gather, townships, by=c(`Township Pcode`="TS_PCODE"))
#narrow down indicators
myanmar_dev <- myanmar %>%
filter(myanmar$Indicator %in% c("Avg (safe sanitation + improved drinking water)",
"Average good roof and wall",
"Electricity for Lighting %__1" ,
"Literacy: % literate"))
#rename indicators for clarity
myanmar_map_set <- mutate(myanmar_dev, map_labels=case_when(
Indicator =="Avg (safe sanitation + improved drinking water)"~"Clean water",
Indicator =="Literacy: % literate"~"Literacy",
Indicator =="Average good roof and wall"~"Roof and walls",
Indicator == "Electricity for Lighting %__1"~"Electric lighting"))
head(myanmar_map_set)
#map selected indicators
ggplot(myanmar_map_set)+
geom_sf(aes(fill=Measure*100), color="white", size=.1)+
scale_fill_distiller(direction=1, name="Population %") +
labs(title="Uneven development across Myanmar", caption="Source: themimu.info/")+
facet_wrap(~map_labels)+
theme_void() +
theme(panel.grid.major = element_line(colour = 'transparent'))
ggsave("myanmar_townships.png")
